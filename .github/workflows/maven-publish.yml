# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build backend
        run: mvn -B package --file backend/pom.xml
      - uses: actions/upload-artifact@v3
        with:
          name: spring-jar
          path: backend/target/backend-0.0.1-SNAPSHOT.jar
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front/angular-ui/
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: front/angular-ui/package-lock.json
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: angular-ui
          path: front/angular-ui/dist/angular-ui/
  test-selenium:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: front/angular-ui/package-lock.json
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - uses: actions/download-artifact@v3
        with:
          name: spring-jar
      - uses: actions/download-artifact@v3
        with:
          name: angular-ui
      - name: start docker-compose
        run: cd backend && docker-compose up -d
      - name: run server
        run: java -jar backend-0.0.1-SNAPSHOT.jar &
      - name: build UI
        run: cd front/angular-ui && npm ci && npm run build
      - name: run UI
        #        run: npm install -g http-server && http-server -p 4200 &
        run: cd front/angular-ui && npm start &
      - name: validation tests
        run: mvn -B test --file Test_Selenium/pom.xml
