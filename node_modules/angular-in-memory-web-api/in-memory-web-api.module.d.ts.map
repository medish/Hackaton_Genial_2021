{"version":3,"file":"in-memory-web-api.module.d.ts","sources":["in-memory-web-api.module.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { ModuleWithProviders, Type } from '@angular/core';\r\nimport { InMemoryBackendConfigArgs, InMemoryDbService } from './interfaces';\r\nexport declare class InMemoryWebApiModule {\r\n    /**\r\n    *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n    *  to in-memory data store that implements `InMemoryDbService`.\r\n    *  with class that implements InMemoryDbService and creates an in-memory database.\r\n    *\r\n    *  Usually imported in the root application module.\r\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n    *\r\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n    * @param {InMemoryBackendConfigArgs} [options]\r\n    *\r\n    * @example\r\n    * InMemoryWebApiModule.forRoot(dbCreator);\r\n    * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n    */\r\n    static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule>;\r\n    /**\r\n     *\r\n     * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n     * Same as `forRoot`.\r\n     * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n     */\r\n    static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule>;\r\n}\r\n"]}