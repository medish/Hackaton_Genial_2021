{"version":3,"file":"in-memory-web-api.module.js","sources":["in-memory-web-api.module.ts"],"names":[],"mappings":"AAAA,kDAAkD;;AAElD;AACW;AAKG;AAKP;AAImC;AACE;AAhB5C,OAAO,EAAY,QAAQ,EAA6B,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAE/D,OAAO,EAEL,qBAAqB,EACrB,iBAAiB,EAClB,MAAM,cAAc,CAAC;AAEtB,OAAO,EAAE,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AAG9F;AAEe,IAFf;AAAmC,IAwCnC,CAAC;AACA,6BAzCY,oBAAoB;AACjC,IAAE;AACD;AACG;AACG;AAED;AAAO;AACG;AAED;AAAO;AACG;AAGd;AAAO;AAAgB;AACG;AAEF,MAD/B;AACH,IAAQ,4BAAO,GAAd,UAAe,SAAkC,EAAE,OAAmC;AAAK,QACzF,OAAO;AACV,YAAK,QAAQ,EAAE,sBAAoB;AACnC,YAAK,SAAS,EAAE;AAChB,gBAAO,EAAE,OAAO,EAAE,iBAAiB,EAAG,QAAQ,EAAE,SAAS,EAAE;AAC3D,gBAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;AAE7D,gBACQ,EAAE,OAAO,EAAE,WAAW;AAC7B,oBAAS,UAAU,EAAE,oCAAoC;AACzD,oBAAS,IAAI,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAU,CAAC,EAAC;AACtE,aAAM;AACN,SAAI,CAAC;AACL,IAAC,CAAC;AAEF,IAAC;AACD;AACG;AACG;AACG;AAEH,OADF;AACJ,IAAQ,+BAAU,GAAjB,UAAkB,SAAkC,EAAE,OAAmC;AAAK,QAC5F,OAAO,sBAAoB,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC3D,IAAC,CAAC;AAEH;KAzCa,oBAAoB,kDADhC,QAAQ,CAAC,EAAE,CAAC,SACA;AAAoB,CAwChC;;;;;gDACD;AAAE,IADF,2BAAC;AACC,CADD,AAxCD,IAwCC;AACA,SAzCY,oBAAoB;AAC/B","sourcesContent":["////// For apps with both Http and HttpClient ////\n\nimport { Injector, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\n\nimport {\n  InMemoryBackendConfigArgs,\n  InMemoryBackendConfig,\n  InMemoryDbService\n} from './interfaces';\n\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\n\n@NgModule({})\nexport class InMemoryWebApiModule {\n  /**\n  *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\n  *  to in-memory data store that implements `InMemoryDbService`.\n  *  with class that implements InMemoryDbService and creates an in-memory database.\n  *\n  *  Usually imported in the root application module.\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n  *\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n  * @param {InMemoryBackendConfigArgs} [options]\n  *\n  * @example\n  * InMemoryWebApiModule.forRoot(dbCreator);\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n  */\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule> {\n    return {\n      ngModule: InMemoryWebApiModule,\n      providers: [\n        { provide: InMemoryDbService,  useClass: dbCreator },\n        { provide: InMemoryBackendConfig, useValue: options },\n\n\n        { provide: HttpBackend,\n          useFactory: httpClientInMemBackendServiceFactory,\n          deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]}\n      ]\n    };\n  }\n\n  /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n  static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders<InMemoryWebApiModule> {\n    return InMemoryWebApiModule.forRoot(dbCreator, options);\n  }\n}\n"]}